# نام گردش کار
name: Build & Release Electron App

# تریگر: اجرا روی پوش تگ‌های v*.*.*
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # تعریف یک جاب که با استراتژی ماتریس برای پلتفرم‌های مختلف اجرا می‌شود
  build-release:
    # نام جاب به صورت داینامیک بر اساس پلتفرم تنظیم می‌شود
    name: Build on ${{ matrix.platform }}

    # استراتژی ماتریس: این جاب را برای هر آیتم در لیست platform اجرا کن
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    # مشخص کردن سیستم‌عامل هر جاب بر اساس مقدار ماتریس
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # مرحله بیلد: اجرای دستور مناسب بر اساس سیستم‌عامل
      - name: Build for Windows
        if: matrix.platform == 'windows-latest'
        run: npm run build:win

      - name: Build for macOS
        if: matrix.platform == 'macos-latest'
        run: npm run build:mac
        # بیلد برای مک معمولاً به متغیرهای Code Signing نیاز دارد
        # اگر در پروژه خود code signing ندارید، این بخش env را حذف کنید
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Build for Linux
        if: matrix.platform == 'ubuntu-latest'
        run: npm run build:linux

      # مرحله آخر: ایجاد Release و آپلود خروجی‌ها
      # این اکشن به صورت هوشمند خروجی‌های هر سه جاب را در یک Release جمع می‌کند
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          # با استفاده از wildcard تمام فایل‌های خروجی electron-builder را پیدا می‌کنیم
          # پوشه خروجی معمولاً dist است
          files: |
            dist/*.exe
            dist/*.msi
            dist/*.AppImage
            dist/*.deb
            dist/*.snap
            dist/*.dmg
            dist/*.zip
            dist/*-mac.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}